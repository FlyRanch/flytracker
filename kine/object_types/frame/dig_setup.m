% Function DIG_SETUP
% 
% CALLING FUNCTION: Kine_v2_0
% ACTIONS: Script for digitizing for type 'FRAME'
% PARENT PROGRAM: Kine_v2_0
% LAST MODIFIED: October 2, 2004 by gwyneth

function dig_setup(cur_obj)

controller = findobj('Tag','controller');
data = guidata(controller);

addpath(data.setup.mfile_path)

% Look at current object, if don't have 'coords' and 'params' add zeros
% cur_obj = get_string(data.handles.cur_object_menu);

if isfield(data.kine.(cur_obj),'data') == 0
    data.kine.(cur_obj).data = 'temp';
end

if isfield(data.kine.(cur_obj).data,'coords') == 0
    data.kine.(cur_obj).data.coords = zeros(data.kine.(cur_obj).config.num_pts,3,data.images.frames);
end

if isfield(data.kine.(cur_obj).data,'params') == 0
    data.kine.(cur_obj).data.params = zeros(size(data.kine.(cur_obj).config.param_array,1),data.images.frames);
end

if isfield(data.kine.(cur_obj).data,'angles') == 0
    % Make data.kine and data.config
    data.kine.(cur_obj).data.angles = zeros(1,3,data.images.frames);   % if the object is a model, initialize the angles array
end

guidata(controller,data)
toggle_pointer_fcn('Mark Points')

% Delete any existing object controls
to_delete = findobj('Tag','obj_control');
delete(to_delete)

%--------------------------------------------------------------------------
bndry = get(data.handles.obj_frame,'Position');

h_cont = (3/8)*bndry(4);
h_box  = (1/8)*bndry(4);
h_but  = (1/8)*bndry(4);
h_spc  = (bndry(4) - h_cont - h_box - h_but) / 8;

w_cont = (5/6)*bndry(3);
w_box  = (3/6)*bndry(3);
w_but  = (2/6)*bndry(3);
w_spc = (bndry(3) - w_cont) / 2;

x_cont = bndry(1) + w_spc;
y_cont = bndry(2) + h_box + h_but + 5*h_spc;
y_box  = bndry(2) + h_but + 2*h_spc;
y_but  = bndry(2) + h_spc;
%--------------------------------------------------------------------------

figure(controller)
% Draw lock check and resynch button
uicontrol(...
    'Style','checkbox',...
    'Tag','obj_control',...
    'Units','normalized',...
    'Position',[x_cont y_box w_box h_box],...
    'BackgroundColor',data.colors.background,...
    'FontName','Helvetica',...
    'FontUnits','points',...
    'FontSize',10,...
    'FontWeight','normal',...
    'String','Lock all match points to frame',...
    'ToolTipString','Check to prevent identified match points from being moved individually',...
    'Visible','on',...
    'Callback','obj_control_callback(''lock_check_callback'')'...
    );

uicontrol(...
    'Style','pushbutton',...
    'Tag','obj_control',...
    'Units','normalized',...
    'Position',[x_cont y_but w_but h_but],...
    'BackgroundColor',data.colors.button_color,...
    'FontName','Helvetica',...
    'FontUnits','points',...
    'FontSize',10,...
    'FontWeight','normal',...
    'String','Resynch to frame...',...
    'ToolTipString','Resynch match points to frame values',...
    'Visible','on',...
    'Callback','obj_control_callback(''resynch_callback'')'...
    );

% Check to see if all the anchor points of the current object are digitized
% for the current frame
% cur_obj = get_string(data.handles.cur_object_menu);
frame = str2num(get(data.handles.frame_box,'String'));

undone = find(data.kine.(cur_obj).data.coords(:,:,frame) == 0);
if isempty(undone) == 0

    figure(controller)

    uicontrol(...
        'Style','pushbutton',...
        'Tag','obj_control',...
        'Units','normalized',...
        'Position',[x_cont y_cont w_cont h_cont],...
        'BackgroundColor',data.colors.button_color,...
        'FontName','Helvetica',...
        'FontUnits','points',...
        'FontSize',11,...
        'FontWeight','bold',...
        'String','FIT FRAME',...
        'ToolTipString','Click here to fit the model and set model parameters',...
        'Visible','on',...
        'Callback','obj_control_callback(''model_params'')'...
        );

else
    type = data.kine.(cur_obj).config.type;
    mfile_path = data.setup.mfile_path;
    cd([mfile_path,filesep,'object_types',filesep,type])
    model_params
    cd(mfile_path)
    
end
